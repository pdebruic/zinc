#!/usr/bin/env superdoit_stone
usage
-----
USAGE
      # with GS_HOME env var set
      $basename [--help | -h] [--debug | -D] [-- [<stone-name> [<topaz-command-line-args>] ] ]
      # with GEMSTONE env var set
      $basename [--help | -h] [--debug | -D] --  -l -I <path-to-.topazini-file>

DESCRIPTION
  Install Zinc in a stone.

OPTIONS
  <stone-name>               Name of the GsDevKit_home stone. <stone-name> argument
                             may be skipped if the script is run in a GsDevKit_home
                             stone directory (i.e., $GS_HOME/server/stones/<stone-name>
  <topaz-command-line-args>  topaz options that should be passed to topaz when running
                             running the script
  -h, --help                 display usage message
  -D, --debug                bring up topaz debugger in the event of a script error

EXAMPLES
  $basename -h -- rowan_361
  $basename -h -- -l -I $GEMSTONE/data/.topazini

  $basename -D -- rowan_361
  $basename -D -- -l -I $GEMSTONE/data/.topazini

  $basename -- rowan_361
  $basename -- -l -I $GEMSTONE/data/.topazini
-----
%
specs
[
RwLoadSpecificationV2 {
	#projectName : 'zinc',
	#projectAlias : 'zinc_rowan',
	#projectSpecFile : 'gs/rowan/project.ston',
	#componentNames : [
		'Core'
	],
	#customConditionalAttributes : [
		'tests'
	],
	#platformProperties : {
		'gemstone' : {
			'allusers' : {
				#defaultSymbolDictName : 'Globals'
			}
		}
	},
	#comment : ''
},
RwLoadSpecificationV2 {
	#specName : 'Announcements',
	#projectName : 'Announcements',
	#gitUrl : 'git@github.com:GemTalk/Announcements.git',
	#revision : 'main',
	#projectSpecFile : 'rowan/project.ston',
	#componentNames : [
		'Announcements'
	],
	#customConditionalAttributes : [ ],
	#platformProperties : {
		'gemstone' : {
			'allusers' : {
				#defaultSymbolDictName : 'Globals'
			}
		}
	},
	#comment : 'Announcements development load spec'
},
RwLoadSpecificationV2 {
	#projectName : 'OrderedDictionary',
	#gitUrl : 'git@github.com:GsDevKit/OrderedDictionary.git',
	#revision : 'rowanize',
	#projectSpecFile : 'rowan/project.ston',
	#componentNames : [
		'Core'
	],
	#customConditionalAttributes : [ ],
	#platformProperties : {
		'gemstone' : {
			'allusers' : {
				#defaultSymbolDictName : 'Globals'
			}
		}
	},
	#comment : ''
}
]
%
method
createMissingClasses
	"just a temporary patch, to get the Zinc Client classes loaded"
	{
		'DynamicVariable' .
		'KeyNotFound' .
		'Smalltalk' .
		'SmallDictionary' .
		'ZnPercentEncoder' .
		'GZipWriteStream' .
		'MCWorkingCopy' .
		'SmalltalkImage' .
		'ZnDefaultCharacterEncoder' .
		'SystemVersion' . 
		'DomainError' .
		'NetworkError' .
		'ImageReadWriter' .
		'ByteString' .
		'FileDoesNotExist' .
		'HTTPProgress' .
		'PrimitiveFailed' .
		'ZnBase64Encoder' .
		'ZnNullEncoder' .
		'GZipReadStream' .
		'ZnByteStringBecameWideString'.
		'WideString'.
	} do: [:className |
		Object
			subclass: className 
			instVarNames: #() 
			classVars: #() 
			classInstVars: #() 
			poolDictionaries: #() 
			inDictionary: Globals ].
%
doit
	self createMissingClasses.
	self preDoitSpecLoad. "load the zinc project using spec"
	self stdout nextPutAll: 'zinc project loaded'; lf.
	^ System commit
%
